<class>
  <keyword> class </keyword>
  <identifierDetails>
    <identifier> Main </identifier>
    <category> class </category>
    <defineOrUsed> define </defineOrUsed>
  </identifierDetails>
  <symbol> { </symbol>
  <subroutineDec>
    <keyword> function </keyword>
    <keyword> void </keyword>
    <identifierDetails>
      <identifier> main </identifier>
      <category> subroutine </category>
      <defineOrUsed> define </defineOrUsed>
    </identifierDetails>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <varDec>
        <keyword> var </keyword>
        <identifierDetails>
          <identifier> PongGame </identifier>
          <category> class </category>
          <defineOrUsed> used </defineOrUsed>
        </identifierDetails>
        <identifierDetails>
          <identifier> game </identifier>
          <category> var </category>
          <index> 0 </index>
          <defineOrUsed> define </defineOrUsed>
        </identifierDetails>
        <symbol> ; </symbol>
      </varDec>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifierDetails>
            <identifier> PongGame </identifier>
            <category> class </category>
            <defineOrUsed> used </defineOrUsed>
          </identifierDetails>
          <symbol> . </symbol>
          <identifierDetails>
            <identifier> newInstance </identifier>
            <category> subroutine </category>
            <defineOrUsed> used </defineOrUsed>
          </identifierDetails>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <letStatement>
          <keyword> let </keyword>
          <identifierDetails>
            <identifier> game </identifier>
            <category> var </category>
            <index> 0 </index>
            <defineOrUsed> used </defineOrUsed>
          </identifierDetails>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifierDetails>
                <identifier> PongGame </identifier>
                <category> class </category>
                <defineOrUsed> used </defineOrUsed>
              </identifierDetails>
              <symbol> . </symbol>
              <identifierDetails>
                <identifier> getInstance </identifier>
                <category> subroutine </category>
                <defineOrUsed> used </defineOrUsed>
              </identifierDetails>
              <symbol> ( </symbol>
              <expressionList>
              </expressionList>
              <symbol> ) </symbol>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifierDetails>
            <identifier> game </identifier>
            <category> var </category>
            <index> 0 </index>
            <defineOrUsed> used </defineOrUsed>
          </identifierDetails>
          <symbol> . </symbol>
          <identifierDetails>
            <identifier> run </identifier>
            <category> subroutine </category>
            <defineOrUsed> used </defineOrUsed>
          </identifierDetails>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifierDetails>
            <identifier> game </identifier>
            <category> var </category>
            <index> 0 </index>
            <defineOrUsed> used </defineOrUsed>
          </identifierDetails>
          <symbol> . </symbol>
          <identifierDetails>
            <identifier> dispose </identifier>
            <category> subroutine </category>
            <defineOrUsed> used </defineOrUsed>
          </identifierDetails>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <symbol> } </symbol>
</class>
