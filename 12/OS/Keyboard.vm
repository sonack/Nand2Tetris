// Created on 2020-02-18 01:19:57 by sonack compiler.
function Keyboard.init 0
push constant 24576
pop static 0
push constant 0
return
function Keyboard.keyPressed 0
push static 0
call Memory.peek 1
return
function Keyboard.displayCursor 0
push constant 0
call Output.printChar 1
pop temp 0
push constant 0
return
function Keyboard.readChar 1
call Keyboard.displayCursor 0
pop temp 0
label Keyboard.readChar.WHILE_0.START
call Keyboard.keyPressed 0
push constant 0
eq
not
if-goto Keyboard.readChar.WHILE_0.CONT
goto Keyboard.readChar.WHILE_0.START
label Keyboard.readChar.WHILE_0.CONT
call Keyboard.keyPressed 0
pop local 0
label Keyboard.readChar.WHILE_1.START
call Keyboard.keyPressed 0
push constant 0
eq
not
not
if-goto Keyboard.readChar.WHILE_1.CONT
goto Keyboard.readChar.WHILE_1.START
label Keyboard.readChar.WHILE_1.CONT
call Output.backSpace 0
pop temp 0
push local 0
push constant 32
lt
push local 0
push constant 128
gt
or
not
not
if-goto Keyboard.readChar.IF_0.F_CASE
push local 0
call Output.printChar 1
pop temp 0
goto Keyboard.readChar.IF_0.CONT
label Keyboard.readChar.IF_0.F_CASE
label Keyboard.readChar.IF_0.CONT
push local 0
return
function Keyboard.readLine 2
push constant 128
call String.new 1
pop local 0
push argument 0
call Output.printString 1
pop temp 0
label Keyboard.readLine.WHILE_0.START
push local 1
call String.newLine 0
eq
not
not
if-goto Keyboard.readLine.WHILE_0.CONT
call Keyboard.readChar 0
pop local 1
push local 1
push constant 32
lt
push local 1
push constant 126
gt
or
not
not
if-goto Keyboard.readLine.IF_0.F_CASE
push local 0
push local 1
call String.appendChar 2
pop local 0
goto Keyboard.readLine.IF_0.CONT
label Keyboard.readLine.IF_0.F_CASE
push local 1
call String.backSpace 0
eq
not
if-goto Keyboard.readLine.IF_1.F_CASE
push local 0
call String.length 1
push constant 0
gt
not
if-goto Keyboard.readLine.IF_2.F_CASE
push local 0
call String.eraseLastChar 1
pop temp 0
call Output.backSpace 0
pop temp 0
goto Keyboard.readLine.IF_2.CONT
label Keyboard.readLine.IF_2.F_CASE
label Keyboard.readLine.IF_2.CONT
goto Keyboard.readLine.IF_1.CONT
label Keyboard.readLine.IF_1.F_CASE
label Keyboard.readLine.IF_1.CONT
label Keyboard.readLine.IF_0.CONT
goto Keyboard.readLine.WHILE_0.START
label Keyboard.readLine.WHILE_0.CONT
push local 0
return
function Keyboard.readInt 1
push argument 0
call Keyboard.readLine 1
pop local 0
push local 0
call String.intValue 1
return
