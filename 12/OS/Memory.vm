function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 2
push constant 16384
pop static 3
push static 2
pop static 1
push constant 0
pop static 5
push constant 1
pop static 4
push constant 0
not
pop static 6
push static 4
push static 2
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push static 2
add
push static 3
push static 2
sub
push constant 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 6
push static 1
pop local 0
push constant 0
pop local 3
label WHILE_EXP0
push local 0
push static 3
eq
not
push local 3
not
and
not
if-goto WHILE_END0
push static 5
push local 0
add
pop pointer 1
push that 0
pop local 4
push argument 0
push constant 2
add
pop local 5
push local 4
push local 5
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 5
add
pop local 2
push static 5
push local 2
add
push local 4
push local 5
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 4
push local 2
add
push static 4
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 4
push local 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 2
add
pop local 1
push constant 0
not
pop local 3
push local 0
push static 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 4
push local 0
add
pop pointer 1
push that 0
pop static 1
label IF_FALSE1
label IF_FALSE0
push static 4
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 3
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 6
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
call Memory.deFrag 0
pop temp 0
push argument 0
call Memory.alloc 1
return
goto IF_END3
label IF_FALSE3
push local 3
call Output.printInt 1
pop temp 0
label IF_END3
label IF_FALSE2
push local 1
return
function Memory.deAlloc 2
push constant 0
pop static 6
push argument 0
push constant 2
sub
pop local 0
push static 5
push local 0
add
push static 4
push local 0
add
pop pointer 1
push that 0
push argument 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push static 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop static 1
label IF_FALSE0
call Memory.deFrag 0
pop temp 0
push constant 0
return
function Memory.deFrag 3
push constant 0
not
pop static 6
push static 1
pop local 0
push static 1
pop local 1
label WHILE_EXP0
push local 0
push static 3
eq
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push static 3
eq
not
push static 4
push local 0
add
pop pointer 1
push that 0
push local 0
eq
push constant 2
add
push static 5
push local 0
add
pop pointer 1
push that 0
push constant 0
gt
or
and
not
if-goto WHILE_END1
push static 4
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 0
pop local 2
push local 2
push static 4
push local 1
add
pop pointer 1
push that 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 4
push local 1
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push local 1
add
push local 2
push local 1
sub
push constant 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
label WHILE_EXP2
push local 0
push static 3
eq
not
push static 4
push local 0
add
pop pointer 1
push that 0
push local 0
push constant 2
add
gt
push static 5
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
and
and
not
if-goto WHILE_END2
push static 4
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.inspect 1
push static 1
pop local 0
push constant 9
call String.new 1
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
call Output.printString 1
pop temp 0
label WHILE_EXP0
push local 0
push static 3
eq
not
not
if-goto WHILE_END0
push local 0
call Output.printInt 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push static 5
push local 0
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push static 4
push local 0
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push static 4
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 9
call String.new 1
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
push constant 61
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
return
